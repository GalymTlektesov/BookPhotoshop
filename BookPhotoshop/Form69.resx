<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Вы сами решаете, насколько весомо то или иное мнение
Мнения - это кирпичики, на которых строится ваша самооценка. Однако, эта конструкция не особо прочная. Если для ее постройки вы берете материалы у других, не забывайте, что вам могут принести полезную древесину, а могут и горящий факел. Когда вам кажется, что все вокруг правы, кроме вас самих, вы не можете выбирать материал самостоятельно, и будете брать то, что вам дают, ведь они знают лучше. Лишь один факел, который вам принесут вместо древесины, запросто может уничтожить все, что вы уже успели построить подчистую.
Когда похвала превращается в наркотик
«И что, мне теперь никого не слушать? Ведь именно похвала заставляет меня рисовать!». Этот подход тоже очень опасен. Когда вы рисуете для похвалы, ваша цель - не стать лучше, а лишь больше цениться. Конечно, эти две цели бесспорно могут дружить между собой, но, однако, существует риск, что вы пойдете по пути наименьшего сопротивления и станете копировать/срисовывать, рисовать только фан-арт, или остановитесь на одном, хорошо знакомом вам стиле. Потому что развитие - это путь проб и ошибок, а ошибки вы, человек, который питается похвалой, перенести не можете. Вы лучше нарисуете очередного пони для своих фанатов и будете наслаждаться приятными отзывами, нежели разместите что-то новое - может быть, демонстрирующее улучшенную технику - и получите вялую реакцию.
Да, похвала очень затягивает, и рисование только ради нее есть ни что иное, как зависимость. Представьте, что кто-то абсолютно вам незнакомый говорит что-то подобное:
«Нет, правда, ты один из лучших…нет, САМЫЙ лучший художник из тех, что я когда-либо видел. У тебя такой уникальный стиль, не скучный, как у других. Не могу перестать любоваться твоими работами, ты вкладываешь в них столько усилий, и каждая из них говорит что-то о тебе. Не знаю, как объяснить, но, кажется, я вижу твой характер в этих работах. Не могу дождаться, когда увижу новые!»
Что вы чувствуете? Адреналин, эйфорию, внезапный всплеск мотивации? Чувствуете себя более живым, чем пару секунд назад? Сердце бьется быстрее? Классное ощущение, правда? Чем оно лучше, тем более вероятно, что вы сделаете все, чтобы почувствовать это снова. Вот так 
работает психологическое пристрастие - похвала 
становится наркотиком для вашего мозга!</value>
  </data>
</root>